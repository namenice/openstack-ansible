# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

haproxy_user_ssl: true
haproxy_user_ssl_cert: "{{ path_ssl_cert }}"
haproxy_user_ssl_key: "{{ path_ssl_key }}"
haproxy_user_ssl_ca_cert: "{{ path_ssl_cert }}"

haproxy_default_services:
  - service:
      haproxy_service_name: glance_api
      haproxy_backend_nodes: "{{ groups['glance_api'] | default([]) }}"
      haproxy_ssl: "{{ haproxy_ssl }}"
      haproxy_port: 9292
      haproxy_balance_type: http
      haproxy_bind: 
        - "{{ external_vip }}"
      haproxy_backend_options:
        - "httpchk /healthcheck"

  - service:
      haproxy_service_name: neutron_server
      haproxy_backend_nodes: "{{ groups['neutron_server'] | default([]) }}"
      haproxy_port: 9696
      haproxy_ssl: "{{ haproxy_ssl }}"
      haproxy_balance_type: http
      haproxy_bind: 
        - "{{ external_vip }}"
      haproxy_backend_options:
        - "forwardfor"
        - "httplog"
        - "httpchk GET /"

  - service:
      haproxy_service_name: nova_api_metadata
      haproxy_backend_nodes: "{{ groups['nova_api_metadata'] | default([]) }}"
      haproxy_ssl: "{{ haproxy_ssl }}"
      haproxy_port: 8775
      haproxy_balance_type: http
      haproxy_bind:
        - "{{ external_vip }}"
      haproxy_backend_options:
        - "httpchk HEAD /"
      haproxy_whitelist_networks:
        - 127.0.0.1/8
        - 192.168.0.0/16
        - 172.16.0.0/12
        - 10.0.0.0/8

  - service:
      haproxy_service_name: rabbitmq_mgmt
      haproxy_backend_nodes: "{{ groups['rabbitmq'] | default([]) }}"
      haproxy_ssl: "{{ haproxy_ssl }}"
      haproxy_port: 15672
      haproxy_balance_type: http
      haproxy_bind:
        - "{{ external_vip }}"
      haproxy_backend_options:
        - "httpchk HEAD /"
      haproxy_whitelist_networks:
        - 127.0.0.1/8
        - 192.168.0.0/16
        - 172.16.0.0/12
        - 10.0.0.0/8

  - service:
      haproxy_service_name: nova_api_os_compute
      haproxy_backend_nodes: "{{ groups['nova_api_os_compute'] | default([]) }}"
      haproxy_ssl: "{{ haproxy_ssl }}"
      haproxy_port: 8774
      haproxy_balance_type: http
      haproxy_bind: 
        - "{{ external_vip }}"
      haproxy_backend_options:
        - "httpchk HEAD /"

  - service:
      haproxy_service_name: nova_api_placement
      haproxy_backend_nodes: "{{ groups['nova_api_placement'] | default([]) }}"
      haproxy_ssl: "{{ haproxy_ssl }}"
      haproxy_port: 8780
      haproxy_balance_type: http
      haproxy_bind:
        - "{{ external_vip }}"
      haproxy_backend_options:
        - "httpchk HEAD /"
      haproxy_backend_httpcheck_options:
        - "expect status 405"

  - service:
      haproxy_service_name: nova_console
      haproxy_backend_nodes: "{{ groups['nova_console'] | default([]) }}"
      haproxy_ssl: "{{ haproxy_ssl }}"
      haproxy_port: 6080
      haproxy_backend_port: 6080
      haproxy_balance_type: http
      haproxy_timeout_client: 60m
      haproxy_timeout_server: 60m
      haproxy_balance_alg: source
      haproxy_bind:
        - "{{ external_vip }}"
      haproxy_backend_options:
        - "httpchk HEAD /"
      haproxy_backend_httpcheck_options:
        - "expect status 404"

  - service:
      haproxy_service_name: cinder_api
      haproxy_backend_nodes: "{{ groups['cinder_api'] | default([]) }}"
      haproxy_ssl: "{{ haproxy_ssl }}"
      haproxy_port: 8776
      haproxy_balance_type: http
      haproxy_bind: 
        - "{{ external_vip }}"
      haproxy_backend_options:
        - "httpchk HEAD /"

  - service:
      haproxy_service_name: horizon
      haproxy_backend_nodes: "{{ groups['horizon_all'] | default([]) }}"
      haproxy_ssl: "{{ haproxy_ssl }}"
      haproxy_ssl_all_vips: true
      haproxy_port: "{{ haproxy_ssl | ternary(443,80) }}"
      haproxy_backend_port: 80
      haproxy_redirect_http_port: 80
      haproxy_balance_type: http
      haproxy_balance_alg: source
      haproxy_bind: 
        - "{{ external_vip }}"
      haproxy_backend_options:
        - "httpchk HEAD /"

  - service:
      haproxy_service_name: keystone_service
      haproxy_backend_nodes: "{{ groups['keystone_all'] | default([])  }}"
      haproxy_ssl: "{{ haproxy_ssl }}"
      haproxy_port: 5000
      haproxy_balance_type: http
      haproxy_bind:
        - "{{ external_vip }}"
      haproxy_backend_options:
        - "httpchk HEAD /"

  - service:
      haproxy_service_name: keystone_admin
      haproxy_backend_nodes: "{{ groups['keystone_all'] | default([]) }}"
      haproxy_ssl: "{{ haproxy_ssl }}"
      haproxy_port: 35357
      haproxy_balance_type: http
      haproxy_bind:
        - "{{ external_vip }}"
      haproxy_backend_options:
        - "httpchk HEAD /"
      haproxy_whitelist_networks:
        - 127.0.0.1/8 
        - 192.168.0.0/16
        - 172.16.0.0/12 
        - 10.0.0.0/8

  - service:
      haproxy_service_name: heat
      haproxy_backend_nodes: "{{ groups['heat_api'] | default([]) }}"
      haproxy_port: 8004
      haproxy_ssl: "{{ haproxy_ssl }}"
      haproxy_bind:
        - "{{ external_vip }}"
      haproxy_balance_type: http
      haproxy_balance_alg: leastconn
      haproxy_backend_options:
        - "forwardfor"
        - "httpchk HEAD /"
        #- "httpchk /status"
        - "httplog"

  - service:
      haproxy_service_name: heat
      haproxy_backend_nodes: "{{ groups['heat_api'] | default([]) }}"
      haproxy_port: 8003
      haproxy_ssl: "{{ haproxy_ssl }}"
      haproxy_bind:
        - "{{ external_vip }}"
      haproxy_balance_type: http
      haproxy_balance_alg: leastconn
      haproxy_backend_options:
        - "forwardfor"
        - "httpchk HEAD /"
        #- "httpchk /status"
        - "httplog"

  - service:
      haproxy_service_name: heat-cfn
      haproxy_backend_nodes: "{{ groups['heat_api'] | default([]) }}"
      haproxy_port: 8000
      haproxy_ssl: "{{ haproxy_ssl }}"
      haproxy_bind:
        - "{{ external_vip }}"
      haproxy_balance_type: http
      haproxy_balance_alg: leastconn
      haproxy_backend_options:
        - "forwardfor"
        - "httpchk HEAD /"
        - "httpchk /status"
        - "httplog"

#  - service:
#      haproxy_service_name: rgw_external_proxy
#      haproxy_backend_nodes: "{{ groups['ceph-rgw'] | default([]) }}"
#      haproxy_ssl: "{{ haproxy_ssl }}"
#      haproxy_balance_alg: source
#      haproxy_port: 9000
#      haproxy_backend_port: 9000
#      haproxy_balance_type: http
#      haproxy_bind:
#        - "{{ external_vip }}"
##      haproxy_backend_options:
##        - "httpchk GET /"
#      haproxy_backend_options:
#        - "httpchk HEAD /"
#      haproxy_backend_httpcheck_options:
#        - "expect status 200"
